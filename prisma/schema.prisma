// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pessoa {
  id Int @id @default(autoincrement()) @map("id")

  PessoaFisica   PessoaFisica?
  PessoaJuridica PessoaJuridica?

  @@map("tb_pessoas")
}

model PessoaFisica {
  id             Int      @id @map("id")
  nomeCompleto   String   @map("nomecompleto") @db.VarChar(255)
  cpf            String   @map("cpf") @db.VarChar(11)
  rg             String   @map("rg") @db.VarChar(11)
  dataNascimento DateTime @map("datanascimento")

  Pessoa                 Pessoa                 @relation(fields: [id], references: [id])
  CompeticaoCompetidores CompeticaoCompetidor[]

  @@map("tb_pessoas_fisicas")
}

model PessoaJuridica {
  id           Int    @id @map("id")
  razaoSocial  String @map("razaosocial") @db.VarChar(255)
  nomeFantasia String @map("nomefantasia") @db.VarChar(255)
  cnpj         String @map("cnpj") @db.VarChar(14)

  Pessoa Pessoa @relation(fields: [id], references: [id])

  @@map("tb_pessoas_juridicas")
}

model Esporte {
  id   Int    @id @default(autoincrement()) @map("id")
  nome String @map("nome") @db.VarChar(255)

  TipoPeriodos TipoPeriodo[]
  Competicoes  Competicao[]

  @@map("tb_esportes")
}

model TipoPeriodo {
  id             Int      @id @default(autoincrement()) @map("id")
  nome           String   @map("nome") @db.VarChar(255)
  minimoPontos   Decimal? @map("minimopontos")
  maximoPontos   Decimal? @map("maximopontos")
  vantagemMinima Decimal? @map("vantagemminina")
  limiteTempo    Int?     @map("tempoperiodo")
  idEsporte      Int      @map("idesporte")

  Esporte            Esporte             @relation(fields: [idEsporte], references: [id])
  CompeticaoPeriodos CompeticaoPeriodo[]
}

model Competicao {
  id          Int      @id @default(autoincrement()) @map("id")
  nome        String   @map("nome") @db.VarChar(255)
  descricao   String   @map("descricao") @db.VarChar(4000)
  observacoes String   @map("observacoes") @db.VarChar(4000)
  dataInicio  DateTime @map("datainicio")
  dataFim     DateTime @map("datafim")
  idEsporte   Int      @map("idesporte")

  Esporte                Esporte                @relation(fields: [idEsporte], references: [id])
  CompeticaoPeriodos     CompeticaoPeriodo[]
  CompeticaoCompetidores CompeticaoCompetidor[]

  @@map("tb_competicoes")
}

model CompeticaoPeriodo {
  idCompeticao   Int      @map("idcompeticao")
  idTipoPeriodo  Int      @map("idtipoperiodo")
  minimoPontos   Decimal? @map("minimopontos")
  maximoPontos   Decimal? @map("maximopontos")
  vantagemMinima Decimal? @map("vantagemminina")
  limiteTempo    Int?     @map("tempoperiodo")

  Competicao  Competicao  @relation(fields: [idCompeticao], references: [id])
  TipoPeriodo TipoPeriodo @relation(fields: [idTipoPeriodo], references: [id])

  @@id([idCompeticao, idTipoPeriodo])
  @@map("tb_competicoes_periodos")
}

model CompeticaoCompetidor {
  idCompeticao Int @map("idcompeticao")
  idCompetidor Int @map("idcompetidor")

  Competicao Competicao   @relation(fields: [idCompeticao], references: [id])
  Competidor PessoaFisica @relation(fields: [idCompetidor], references: [id])

  @@id([idCompeticao, idCompetidor])
  @@map("tb_competicoes_competidores")
}

model Equipe {
  id   Int    @id @default(autoincrement()) @map("id")
  nome String @map("nome") @db.VarChar(255)

  @@map("tb_equipes")
}
